
    <%- include('partials/header') -%>
    <section class="slider-area slider-area2">
        <div class="slider-active">
            <!-- Single Slider -->
            <div class="single-slider slider-height2">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-8 col-lg-11 col-md-12">
                            <div class="hero__caption hero__caption2">
                                <h1 data-animation="bounceIn" data-delay="0.2s">Our courses</h1>
                                <!-- breadcrumb Start-->
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb">
                                        <li class="breadcrumb-item"><a href="index">Home</a></li>
                                        <li class="breadcrumb-item"><a href="#">Java</a></li> 
                                    </ol>
                                </nav>
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb">
                                        <li class="breadcrumb-item" id="clk"><a href="#itj">Introduction</a></li>
                                        <li class="breadcrumb-item"><a href="#jt">Java Terminology</a></li> 
                                        <li class="breadcrumb-item"> <a href="#mf">Features of Java</a></li> 
                                        <li class="breadcrumb-item">  <a href="#Exm">Example</a></li> 
                                    </ol>
                                </nav>
                                <!-- breadcrumb End -->
                            </div>
                        </div>
                    </div>
                </div>          
            </div>
        </div>
    </section>
    <div class="javamainbody">
     
        <div class="java">
            <center><img src="img/Java — Now and Then.jfif" alt=""></center>
            <h2>
                Java is one of the most popular and widely used programming languages.
                <hr class="hrclass">
            </h2>
            <ul>
                <li>Java has been one of the most popular programming languages for many years.</li>
                <li>Java is Object Oriented. However, it is not considered as pure object-oriented as it provides
                    support
                    for
                    primitive data types (like int, char, etc)</li>
                <li>The Java codes are first compiled into byte code (machine-independent code). Then the byte code runs
                    on
                    <strong>J</strong>ava <strong>V</strong>irtual <strong>M</strong>achine (JVM) regardless of the
                    underlying
                    architecture.
                </li>
                <li>Java syntax is similar to C/C++. But Java does not provide low-level programming functionalities
                    like
                    pointers. Also, Java codes are always written in the form of classes and objects.</li>
                <li>Java is used in all kinds of applications like Mobile Applications (Android is Java-based), desktop
                    applications, web applications, client-server applications, enterprise applications, and many more.
                </li>
                <li>When compared with C++, Java codes are generally more maintainable because Java does not allow many
                    things
                    which may lead to bad/inefficient programming if used incorrectly. For example, non-primitives are
                    always
                    references in Java. So we cannot pass large objects (like we can do in C++) to functions, we always
                    pass
                    references in Java. One more example, since there are no pointers, bad memory access is also not
                    possible.
                </li>
                <li>When compared with Python, Java kind of fits between C++ and Python. The programs are written in
                    Java
                    typically run faster than corresponding Python programs and slower than C++. Like C++, Java does
                    static
                    type
                    checking, but Python does not.</li>
            </ul>

            <div class="jump" id="itj">
                <h1>Introduction to Java
                    <hr class="hrclass">
                </h1>

                <div>
                    <p>JAVA was developed by James Gosling at Sun Microsystems Inc in the year 1995, later acquired by
                        Oracle
                        Corporation. It is a simple programming language. Java makes writing, compiling, and debugging
                        programming easy. It helps to create reusable code and modular programs. Java is a class-based,
                        object-oriented programming language and is designed to have as few implementation dependencies
                        as
                        possible. A general-purpose programming language made for developers to write once run anywhere
                        that
                        is
                        compiled Java code can run on all platforms that support Java. Java applications are compiled to
                        byte
                        code that can run on any Java Virtual Machine. The syntax of Java is similar to c/c++.</p>

                    <p> History: Java’s history is very interesting. It is a programming language created in 1991. James
                        Gosling, Mike Sheridan, and Patrick Naughton, a team of Sun engineers known as the Green team
                        initiated
                        the Java language in 1991. Sun Microsystems released its first public implementation in 1996 as
                        Java
                        1.0. It provides no-cost -run-times on popular platforms. Java1.0 compiler was re-written in
                        Java by
                        Arthur Van Hoff to strictly comply with its specifications. With the arrival of Java 2, new
                        versions
                        had
                        multiple configurations built for different types of platforms.</p>

                    <p> In 1997, Sun Microsystems approached the ISO standards body and later formalized Java, but it
                        soon
                        withdrew from the process. At one time, Sun made most of its Java implementations available
                        without
                        charge, despite their proprietary software status. Sun generated revenue from Java through the
                        selling
                        of licenses for specialized products such as the Java Enterprise System.</p>

                    <p>
                        On November 13, 2006, Sun released much of its Java virtual machine as free, open-source
                        software.
                        On
                        May 8, 2007, Sun finished the process, making all of its JVM’s core code available under
                        open-source
                        distribution terms.
                    </p>


                    <p>The principles for creating java were simple, robust, secured, high performance, portable,
                        multi-threaded, interpreted, dynamic, etc. In 1995 Java was developed by James Gosling, who is
                        known
                        as
                        the Father of Java. Currently, Java is used in mobile devices, internet programming, games,
                        e-business,
                        etc.</p>

                    <p>
                        Java programming language is named JAVA. Why?
                        After the name OAK, the team decided to give a new name to it and the suggested words were Silk,
                        Jolt,
                        revolutionary, DNA, dynamic, etc. These all names were easy to spell and fun to say, but they
                        all
                        wanted
                        the name to reflect the essence of technology. In accordance with James Gosling, Java the among
                        the
                        top
                        names along with Silk, and since java was a unique name so most of them preferred it.
                    </p>

                    <p>
                        Java is the name of an island in Indonesia where the first coffee(named java coffee) was
                        produced.
                        And
                        this name was chosen by James Gosling while having coffee near his office. Note that Java is
                        just a
                        name, not an acronym.
                    </p>

                </div>
            </div>



            <div class="jump" id="jt">
                <h3>Java Terminology
                    <hr class="hrclass">
                </h3>
                <p>Before learning Java, one must be familiar with these common terms of Java.</p>

                <ol class="ol">

                    <li> <span>Java Virtual Machine(JVM):</span> This is generally referred to as JVM. There are three
                        execution
                        phases of a program. They are written, compile and run the program.

                        Writing a program is done by a java programmer like you and me.
                        The compilation is done by the JAVAC compiler which is a primary Java compiler included in the
                        Java
                        development kit (JDK). It takes the Java program as input and generates bytecode as output.
                        In the Running phase of a program, JVM executes the bytecode generated by the compiler.
                        Now, we understood that the function of Java Virtual Machine is to execute the bytecode produced
                        by
                        the
                        compiler. Every Operating System has a different JVM but the output they produce after the
                        execution
                        of
                        bytecode is the same across all the operating systems. This is why Java is known as a
                        platform-independent language.
                    </li>

                    <li>
                        <span> Bytecode in the Development process:</span> As discussed, the Javac compiler of JDK
                        compiles
                        the
                        java source code into bytecode so that it can be executed by JVM. It is saved as .class file by
                        the
                        compiler. To view the bytecode, a disassembler like javap can be used.

                    </li>
                    <li><span>Java Development Kit(JDK):</span> While we were using the term JDK when we learn about
                        bytecode
                        and JVM. So, as the name suggests, it is a complete Java development kit that includes
                        everything
                        including compiler, Java Runtime Environment (JRE), java debuggers, java docs, etc. For the
                        program
                        to
                        execute in java, we need to install JDK on our computer in order to create, compile and run the
                        java
                        program.
                    </li>
                    <li>
                        <span> Java Runtime Environment (JRE):</span> JDK includes JRE. JRE installation on our
                        computers
                        allows
                        the java program to run, however, we cannot compile it. JRE includes a browser, JVM, applet
                        supports,
                        and plugins. For running the java program, a computer needs JRE.
                    </li>

                    <li><span>Garbage Collector:</span> In Java, programmers can’t delete the objects. To delete or
                        recollect
                        that memory JVM has a program called Garbage Collector. Garbage Collectors can recollect the
                        objects
                        that are not referenced. So Java makes the life of a programmer easy by handling memory
                        management.
                        However, programmers should be careful about their code whether they are using objects that have
                        been
                        used for a long time. Because Garbage cannot recover the memory of objects being referenced.

                    </li>

                    <li><span>ClassPath:</span> The classpath is the file path where the java runtime and Java compiler
                        look
                        for
                        .class files to load. By default, JDK provides many libraries. If you want to include external
                        libraries
                        they should be added to the classpath.</li>
                </ol>
            </div>

            <div class="jump" id="mf">
                <h3>Primary/Main Features of Java
                    <hr class="hrclass">
                </h3>
                <ol class="ol">
                    <li> <span>Platform Independent:</span> Compiler converts source code to bytecode and then the JVM
                        executes
                        the bytecode generated by the compiler. This bytecode can run on any platform be it Windows,
                        Linux,
                        or
                        macOS which means if we compile a program on Windows, then we can run it on Linux and vice
                        versa.
                        Each
                        operating system has a different JVM, but the output produced by all the OS is the same after
                        the
                        execution of bytecode. That is why we call java a platform-independent language.

                    </li>

                    <li>
                        <span> Object-Oriented Programming Language:</span> Organizing the program in the terms of
                        collection of
                        objects is a way of object-oriented programming, each of which represents an instance of the
                        class.

                        The four main concepts of Object-Oriented programming are:

                        <pre>
    Abstraction
    Encapsulation
    Inheritance
    Polymorphism
    </pre>
                    </li>
                    <li>
                        <span>Simple:</span> Java is one of the simple languages as it does not have complex features
                        like
                        pointers, operator overloading, multiple inheritances, and Explicit memory allocation.

                    </li>
                    <li>
                        <span>Robust:</span> Java language is robust which means reliable. It is developed in such a way
                        that it
                        puts a lot of effort into checking errors as early as possible, that is why the java compiler is
                        able to
                        detect even those errors that are not easy to detect by another programming language. The main
                        features
                        of java that make it robust are garbage collection, Exception Handling, and memory allocation.
                    </li>

                    <li>
                        <span>Secure:</span> In java, we don’t have pointers, so we cannot access out-of-bound arrays
                        i.e it
                        shows ArrayIndexOutOfBound Exception if we try to do so. That’s why several security flaws like
                        stack
                        corruption or buffer overflow are impossible to exploit in Java. Also java programs run in an
                        environment that is independent of the os(operating system) environment which makes java
                        programs
                        more
                        secure .
                    </li>

                    <li>
                        <span> Distributed:</span> We can create distributed applications using the java programming
                        language.
                        Remote Method Invocation and Enterprise Java Beans are used for creating distributed
                        applications in
                        java. The java programs can be easily distributed on one or more systems that are connected to
                        each
                        other through an internet connection.
                    </li>

                    <li>
                        <span> Multithreading:</span> Java supports multithreading. It is a Java feature that allows
                        concurrent
                        execution of two or more parts of a program for maximum utilization of the CPU.
                    </li>
                    <li>
                        <span> Portable:</span> As we know, java code written on one machine can be run on another
                        machine.
                        The
                        platform-independent feature of java in which its platform-independent bytecode can be taken to
                        any
                        platform for execution makes java portable.
                    </li>

                    <li>
                        <span> High Performance:</span> Java architecture is defined in such a way that it reduces
                        overhead
                        during the runtime and at some time java uses Just In Time (JIT) compiler where the compiler
                        compiles
                        code on-demand basics where it only compiles those methods that are called making applications
                        to
                        execute faster.

                    </li>
                    <li>
                        <span>Dynamic flexibility:</span> Java being completely object-oriented gives us the flexibility
                        to
                        add
                        classes, new methods to existing classes and even create new classes through sub-classes. Java
                        even
                        supports functions written in other languages such as C, C++ which are referred to as native
                        methods.
                    </li>

                    <li><span>Sandbox Execution:</span> Java programs run in a separate space that allows user to
                        execute
                        their
                        applications without affecting the underlying system with help of a bytecode verifier. Bytecode
                        verifier
                        also provides additional security as its role is to check the code for any violation of access.

                    </li>

                    <li><span>Write Once Run Anywhere:</span> As discussed above java application generates a ‘.class’
                        file
                        which corresponds to our applications(program) but contains code in binary format. It provides
                        ease
                        t
                        architecture-neutral ease as bytecode is not dependent on any machine architecture. It is the
                        primary
                        reason java is used in the enterprising IT industry globally worldwide.</li>

                    <li><span>Power of compilation and interpretation:</span> Most languages are designed with purpose
                        either
                        they are compiled language or they are interpreted language. But java integrates arising
                        enormous
                        power
                        as Java compiler compiles the source code to bytecode and JVM executes this bytecode to machine
                        OS-dependent executable code.</li>
                </ol>
            </div>

            <div class="jump" id="Exm">
                <h2>Example
                    <hr class="hrclass">
                </h2>

                <div class="example">
                    <pre>
// Importing classes from packages
import java.io.*;
 
// Main class
public class GFG {
 
    // Main driver method
    public static void main(String[] args)
    {
 
        // Print statement
        System.out.println("Welcome to GeeksforGeeks");
    }
}
</pre>
                    <h3>Output</h3>
                    <p class="out">Welcome to GeeksforGeeks</p>

                    <h3>Explanation:
                        <hr class="hrclass">
                    </h3>
                    <ol class="ol">

                        <li>
                            <span>Comments:</span> Comments are used for explaining code and are used in a similar
                            manner in
                            Java or C or C++. Compilers ignore the comment entries and do not execute them. Comments can
                            be
                            of a
                            single line or multiple lines.
                            <pre>
    Single line Comments:
    Syntax:
    
    // Single line comment
    Multi-line comments:
    Syntax:
    
    /* Multi line comments*/
    </pre>
                        </li>
                        <li> <span>import java.io.*:</span> This means all the classes of io package can be imported.
                            Java
                            io
                            package provides a set of input and output streams for reading and writing data to files or
                            other
                            input or output sources.

                        </li>

                        <li> <span>class:</span> The class contains the data and methods to be used in the program.
                            Methods
                            define the behavior of the class. Class GFG has only one method Main in JAVA.</li>

                        <li><span> static void Main():</span> static keyword tells us that this method is accessible
                            without
                            instantiating the class. </li>

                        <li>
                            <span>void:</span> keywords tell that this method will not return anything. The main()
                            method is
                            the
                            entry point of our application.
                        </li>

                        <li><span>System.in:</span> This is the standard input stream that is used to read characters
                            from
                            the
                            keyboard or any other standard input device.</li>

                        <li><span>System.out:</span> This is the standard output stream that is used to produce the
                            result
                            of a
                            program on an output device like the computer screen.</li>

                        <li><span>println():</span> This method in Java is also used to display text on the console. It
                            prints
                            the text on the console and the cursor moves to the start of the next line at the console.
                            The
                            next
                            printing takes place from the next line.</li>

                        <li>
                            <span> String []args:</span> This is the argument passed to the main function which is an
                            array
                            of
                            strings with the array name args. One can choose their own flexible name but this name is
                            used
                            by
                            many developers.
                        </li>
                    </ol>

                    <i class="green_c"><strong>*Note:-</strong> Everything in java , is represented in Class as an object including the
                        main
                        function.</i>
                </div>
            </div>
        </div>

    </div>
    <script>
        const bar = document.getElementById('bar');
        const nav = document.getElementById('navbar');
        const close = document.getElementById('close');
        if (bar) {
            bar.addEventListener('click', () => {
                nav.classList.add('active');
            })
        }
        if (close) {
            close.addEventListener('click', () => {
                nav.classList.remove('active');
            })
        }
    </script>
<%- include('partials/footer') -%>